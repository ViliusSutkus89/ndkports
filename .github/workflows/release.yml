name: release
run-name: ${{ inputs.PACKAGE }} ${{ inputs.VERSION }}
on:
  workflow_dispatch:
    inputs:
      PACKAGE:
        description: 'Package name'
        required: true
      VERSION:
        description: 'Package version'
        default: ''
        required: false
      EXTRA_REPOSITORIES:
        description: 'Extra maven repositories to find dependencies'
        default: ''
        required: false

env:
  REPO_DESCRIPTION: ${{ inputs.PACKAGE }}-${{ inputs.VERSION }}-${{ github.run_id }}

jobs:
  openSonatype:
    environment: SonatypeAccess
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - uses: android-actions/setup-android@v3

      - uses: actions/checkout@v4

      - run: ./gradlew -PrepoDescription=${{ env.REPO_DESCRIPTION }} initializeSonatypeStagingRepository -PndkPath=${{ env.ANDROID_SDK_ROOT }}/ndk/26.1.10909125
        env:
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}

  publishToSonatype:
    name: ${{ matrix.ndk }} ${{ matrix.libraryType }}
    needs: openSonatype
    environment: SonatypeAccess
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        ndk:
          - "26.1.10909125"
          - "25.2.9519653"
        libraryType:
          - "static"
          - "shared"
          - "shared-with-shared-deps"
    steps:
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - uses: android-actions/setup-android@v3
      - run: sdkmanager "ndk;${{ matrix.ndk }}"
      - run: pip3 install --user ninja meson

      - run: sudo apt-get install --yes gettext
        if: ${{ inputs.PACKAGE == 'fontforge' }}

      - uses: actions/checkout@v4

      - run: ./gradlew ${{ inputs.PACKAGE }}:publishToMavenLocal -PpackageVersion=${{ inputs.VERSION }} -PndkPath=${{ env.ANDROID_SDK_ROOT }}/ndk/${{ matrix.ndk }} -PlibraryType=${{ matrix.libraryType }} -PextraRepositories="${{ github.event.inputs.EXTRA_REPOSITORIES }}"

      - uses: actions/upload-artifact@v3
        with:
          name: "${{ github.event.inputs.PACKAGE }}-${{ github.even.inputs.VERSION }}-${{ matrix.ndk }}-${{ matrix.libraryType }}-logs"
          path: "${{ github.event.inputs.PACKAGE }}/build/port/logs"
          if-no-files-found: error

      - uses: actions/upload-artifact@v3
        with:
          name: "${{ inputs.package }}-${{ inputs.VERSION }}-${{ matrix.ndk }}-${{ matrix.libraryType }}-mavenLocal"
          path: ~/.m2
          if-no-files-found: error

      - run: ./gradlew -PrepoDescription=${{ env.REPO_DESCRIPTION }} findSonatypeStagingRepository -x initializeSonatypeStagingRepository ${{ inputs.PACKAGE }}:publishToSonatype -PpackageVersion=${{ inputs.VERSION }} -PndkPath=${{ env.ANDROID_SDK_ROOT }}/ndk/${{ matrix.ndk }} -PlibraryType=${{ matrix.libraryType }} -PextraRepositories="${{ github.event.inputs.EXTRA_REPOSITORIES }}"
        env:
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASS: ${{ secrets.SIGNING_PASS }}

  closeSonatype:
    needs: publishToSonatype
    environment: SonatypeAccess
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - uses: android-actions/setup-android@v3

      - uses: actions/checkout@v4

      - run: ./gradlew -PrepoDescription=${{ env.REPO_DESCRIPTION }} findSonatypeStagingRepository -x initializeSonatypeStagingRepository closeSonatypeStagingRepository -PndkPath=${{ env.ANDROID_SDK_ROOT }}/ndk/26.1.10909125
        env:
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}
